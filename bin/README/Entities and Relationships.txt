CREATE DATABASE ecommerce; 
USE ecommerce;

-- User Table
CREATE TABLE `user` (
    user_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    role VARCHAR(20) NOT NULL
);

-- Product Table
CREATE TABLE product (
    product_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock INT NOT NULL
);

-- Order Table
CREATE TABLE `order` (
    order_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL DEFAULT current_timestamp(),
    total_amount DECIMAL(10, 2) NOT NULL,
    status VARCHAR(20) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES `user`(user_id)
);

-- Junction Tables
-- Order Item Table
CREATE TABLE orderItem (
    order_item_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    stock INT NOT NULL,
    subtotal DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES `order`(order_id),
    FOREIGN KEY (product_id) REFERENCES product(product_id)
);

-- Role Table
CREATE TABLE `role` (
    role_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    role_name VARCHAR(20) NOT NULL
);

-- User Role Table
CREATE TABLE userRole (
    user_role_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    role_id INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES `user`(user_id),
    FOREIGN KEY (role_id) REFERENCES `role`(role_id)
);

-- Product Order Item Table
CREATE TABLE productOrderItem (
    product_order_item_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    order_item_id INT NOT NULL,
    product_id INT NOT NULL,
    FOREIGN KEY (order_item_id) REFERENCES orderItem(order_item_id),
    FOREIGN KEY (product_id) REFERENCES product(product_id)
);

Relationships:
User-Order Relationship:
One-to-Many (1:N)
A user can place multiple orders, but each order is placed by a single user.

Product-OrderItem Relationship:
One-to-Many (1:N)
Each product in an order is represented as an order item, but a product can be present in multiple order items across different orders.

Order-OrderItem Relationship:
One-to-Many (1:N)
An order can have multiple order items, but each order item belongs to a specific order.

User-Role Relationship:
One-to-Many (1:N)
Each user has a specific role (Client or Admin), but a role can be associated with multiple users.

+-----------------+       +-------------------+       +-----------------+
|     User        |       |      Product      |       |      Order      |
+-----------------+       +-------------------+       +-----------------+
| UserID (PK)     |       | ProductID (PK)    |       | OrderID (PK)    |
| Username        |       | Name              |       | UserID (FK)     |
| Password        |       | Description       |       | OrderDate       |
| Email           |       | Price             |       | TotalAmount     |
| Role            |       | stockInStock   |       | Status          |
+-----------------+       +-------------------+       +-----------------+
        |                           |                           |
        |                           |                           |
        v                           v                           v
+------------------+    +----------------------+    +------------------+
|    OrderItem     |    |  User-Role (junction)|   | Product-OrderItem |
+------------------+    +----------------------+    +------------------+
| OrderItemID (PK) |    | UserID (FK)          |    | OrderItemID (PK) |
| OrderID (FK)     |    | RoleID (FK)          |    | OrderID (FK)     |
| ProductID (FK)   |    +----------------------+    | ProductID (FK)   |
| stock         |                                | stock         |
| Subtotal         |                                +------------------+
+------------------+ 
